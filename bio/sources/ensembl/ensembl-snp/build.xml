<!--
  a bit of an odd source as it writes straight to the production database
  and deals with model objects (and therefore the "main" sub-project depends on
  the production model).
-->
<project name="ensembl-snp" default="default" basedir=".">
  <description>build, test, package ensembl-snp</description>

  <import file="../../../../imbuild/source.xml"/>

  <!-- no retrieve -->
  <target name="retrieve"/>

  <target name="-init-loader-classname" unless="ensembl-snp.loaderClassName">
    <!-- set the default -->
    <property name="ensembl-snp.loaderClassName"
              value="org.intermine.bio.dataconversion.EnsembSnpLoaderTask"/>
  </target>

  <!-- NOTE: we can do this with dynamic properties -->
  <target name="load" depends="-init-loader-classname, init, -init-deps">
    <taskdef name="read-ensembl-snp"
      classname="${ensembl-snp.loaderClassName}"
      classpathref="task.class.path"/>
    <read-ensembl-snp integrationWriterAlias="integration.production"
                sourceName="${source.name}"
                sourceType="${source.type}">
      <fileset dir="${src.data.dir}" includes="${ensembl-snp.includes}"/>
    </read-ensembl-snp>
  </target>

</project>

