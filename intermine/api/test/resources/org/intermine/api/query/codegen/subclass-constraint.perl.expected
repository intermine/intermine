#!/usr/bin/perl

######################################################################
# This is an automatically generated script to run your query.
# To use it you will require the InterMine Perl client libraries.
# These can be installed from CPAN, using your preferred client, eg:
#
#    sudo cpan Webservice::InterMine
#
# For help using these modules, please see these resources:
#
#  * https://metacpan.org/pod/Webservice::InterMine
#       - API reference
#  * https://metacpan.org/pod/Webservice::InterMine::Cookbook
#       - A How-To manual
#  * http://intermine.readthedocs.org/en/latest/web-services
#       - General Usage
#  * http://iodoc.labs.intermine.org
#       - Reference documentation for the underlying REST API
#
######################################################################

use strict;
use warnings;

# Set the output field separator as tab
$, = "\t";
# Print unicode to standard out
binmode(STDOUT, 'utf8');
# Silence warnings when printing null fields
no warnings ('uninitialized');

# This code makes use of the Webservice::InterMine library.
# The following import statement sets TEST_PROJECT_TITLE as your default
use Webservice::InterMine TEST_WS_VERSION 'TEST_SERVICE_ROOT';

my $query = new_query(class => 'Employee');

# Type constraints must come before all mentions of the paths they constrain
$query->add_constraint(
    path => 'Employee.department.manager',
    type => 'CEO',
);
# The view specifies the output columns
$query->add_view(qw/
    name
    age
/);


# Use an iterator to avoid having all rows in memory at once.
my $it = $query->iterator();
while (my $row = <$it>) {
    print $row->{'name'}, $row->{'age'}, "\n";
}
