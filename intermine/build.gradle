buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        jcenter()
    }
    dependencies {
        classpath "net.researchgate:gradle-release:2.6.0"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0"
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.6.2"
    }
}

subprojects {
    group = 'org.intermine'
    version '5.0.0'

    apply plugin: 'net.researchgate.release'
    apply plugin: "java"
    apply plugin: "maven"
    apply plugin: "com.jfrog.bintray"
    apply plugin: "com.jfrog.artifactory"
    apply plugin: "checkstyle"
    apply plugin: "eclipse"
    apply plugin: "idea"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenLocal()
        jcenter()
        maven {
            url "https://oss.jfrog.org/artifactory/oss-snapshot-local"
        }
        flatDir {
            dirs '../libs'
        }
    }

    configurations {
        all{
            resolutionStrategy {
                force 'org.apache.logging.log4j:log4j-1.2-api:2.8.2'
            }
        }
    }

    if (it.name != 'intermine-resources') {
        dependencies {
            compile group: 'ant', name: 'ant', version: '1.6.5'
            compile group: 'org.apache.logging.log4j', name: 'log4j-1.2-api', version: '2.8.2'
            compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.7'
            testCompile group: 'junit', name: 'junit', version: '4.8.2'
        }

        if (it.name != 'intermine-testresources') {
            dependencies {
                compile project(':intermine-resources')
            }
        }
    }

    // see http://blog.joda.org/2014/02/turning-off-doclint-in-jdk-8-javadoc.html
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }

    checkstyle {
        toolVersion '7.8.1'
        configFile file("${rootDir}/../config/checkstyle/checkstyle.xml")
        sourceSets = [sourceSets.main]
        showViolations = true
        ignoreFailures = false
        maxWarnings = 0
        //reportsDir = file("$project.rootDir/reports/checkstyle/$project.name")
        configProperties = [
                'checkstyle.header.file': "${rootDir}/../config/checkstyle/copyright_header.txt",
                'suppressionFile': "${rootDir}/../config/checkstyle/suppressions.xml"
        ]
    }

    def excludePattern = 'build/generated-src/antlr/main/'
    def excludePatternAntStyle = '**/' + excludePattern + '*'

    checkstyleMain {
        exclude excludePatternAntStyle
        source = fileTree('src/main') {
            includes = ['**/*.java']
            excludes = ['**/org/intermine/model/fulldata/**', '**/org/intermine/api/userprofile/**', 'build/**']
        }
    }

    checkstyleTest {
        enabled = false
    }

    tasks.withType(Test) {
        scanForTestClasses = false
        include '**/*Test.class'
        test.reports.html.enabled = true
    }

    test {
        ignoreFailures = true

        // we have a system property that we need to get to the tests
        systemProperties System.properties

        testLogging {
            events "skipped", "failed"
            exceptionFormat "full"
            showExceptions true
            showStackTraces true
            showCauses true
        }
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }


    artifactory {
        contextUrl = 'https://oss.jfrog.org/artifactory/'
        resolve {
            repository {
                repoKey = 'libs-release'
            }
        }
        publish {
            repository {
                if (project.version.endsWith("-SNAPSHOT")) {
                    repoKey = 'oss-snapshot-local'
                } else {
                    repoKey = 'oss-release-local'
                }
            username = System.getenv('BINTRAY_USER')
            password = System.getenv('BINTRAY_KEY')
            }
            defaults {
	        publishConfigs('archives')
            }
        }
    }

    bintray {
        user = System.getenv('BINTRAY_USER')
        key = System.getenv('BINTRAY_KEY')

        dryRun = false //[Default: false] Whether to run this as dry-run, without deploying
        publish = true //[Default: false] Whether version should be auto published after an upload
        override = true //[Default: false] Whether to override version artifacts already published
        pkg {
            repo = 'intermine'
            name = project.name
            userOrg = user
            licenses = ['LGPL-2.1']
            vcsUrl = 'https://github.com/intermine/intermine.git'
            publicDownloadNumbers = true
            version {
                name = '5.0.0'
                desc = 'InterMine 5.0.0'
                vcsTag = 'intermine-5.0.0'
            }
        }
        configurations = ['archives']
    }

}

task testReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/allTests")
    // Include the results from the `test` task in all subprojects
    reportOn subprojects*.test
}

