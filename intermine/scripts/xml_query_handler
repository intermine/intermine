#!/usr/bin/perl

use strict;
use warnings;
use Scalar::Util 'looks_like_number';

use Webservice::InterMine::Simple 0.9800;

my ($xml_file, $url, $max_results, $format) = @ARGV;

sub usage() {
    return "$0 query.xml url [max_results]\n";
}

die "No xml supplied as input!\n" . usage()
    if (@ARGV < 1);
die "No url supplied!\n". usage()
    if (@ARGV < 2);
die "Too many arguments!\n" . usage()
    if (@ARGV > 4);
if (@ARGV > 2 and not looks_like_number($max_results)) {
    die "Max_results must be a number, not $max_results\n" . usage();
}

my $service = get_service($url);
my $query = $service->new_from_xml(source_file => $xml_file);

my %args = ( 
    columnheaders => ($format ? 0 : 1), 
    ($max_results ? (size => $max_results) : ()),
    ($format ?      (as => $format) :    ())
);

if ($format) {
    print $query->results(%args);
} else {
    my @rows = $query->results_table(%args);

    if (@rows) {
        my $format = join(' | ', (("%-30.30s") x scalar(@{$rows[0]})));
        for my $row (@rows) {
            printf $format . "\n", @$row;
        }
    }
}

exit;
