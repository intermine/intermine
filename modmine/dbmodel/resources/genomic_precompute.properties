# Bag upload queries
precompute.query.1 = SELECT a1_.id as a3_, a2_.value as a4_ FROM org.intermine.model.bio.BioEntity AS a1_, org.intermine.model.bio.Synonym AS a2_ WHERE a1_.synonyms CONTAINS a2_

precompute.query.3 = SELECT a1_.id AS a3_, a2_.value AS a4_, a5_.shortName as a6_ FROM org.intermine.model.bio.BioEntity AS a1_, org.intermine.model.bio.Synonym AS a2_, org.intermine.model.bio.Organism AS a5_ WHERE (a1_.synonyms CONTAINS a2_ AND a1_.organism CONTAINS a5_)

# gene/protein --> organism [used by some widgets]
precompute.query.5 = SELECT a1_.id as a3_, a2_.name AS a4_ FROM org.intermine.model.bio.Gene AS a1_, org.intermine.model.bio.Organism AS a2_ WHERE a1_.organism CONTAINS a2_

precompute.query.6 = SELECT a1_.id AS a3_, a2_.name AS a4_ FROM org.intermine.model.bio.Protein AS a1_, org.intermine.model.bio.Organism AS a2_ WHERE a1_.organism CONTAINS a2_

# chromosome distribution widget
precompute.query.7 = SELECT a2_.id as a4_, a1_.primaryIdentifier AS a5_, a2_.primaryIdentifier AS a6_,  a3_.name as a7_ FROM org.intermine.model.bio.Chromosome AS a1_, org.intermine.model.bio.SequenceFeature AS a2_, org.intermine.model.bio.Organism AS a3_ WHERE (a2_.chromosome CONTAINS a1_ AND a2_.organism CONTAINS a3_)

precompute.query.8 = SELECT a3_.primaryIdentifier AS a1_, a4_.primaryIdentifier AS a2_, a4_.id as a6_, a5_.name as a7_ FROM org.intermine.model.bio.Chromosome AS a3_, org.intermine.model.bio.SequenceFeature AS a4_, org.intermine.model.bio.Organism AS a5_ WHERE (a4_.chromosome CONTAINS a3_ AND a4_.organism CONTAINS a5_)

precompute.query.9 = SELECT a5_.name AS a1_, a3_.primaryIdentifier AS a6_, COUNT(*) AS a2_ FROM org.intermine.model.bio.Chromosome AS a3_, org.intermine.model.bio.SequenceFeature AS a4_, org.intermine.model.bio.Organism AS a5_ WHERE (a4_.chromosome CONTAINS a3_ AND a4_.organism CONTAINS a5_) GROUP BY a5_.name, a3_.primaryIdentifier

# feature length widget - temporarily disabled
#precompute.query.10 = SELECT a2_.name AS a5_, a1_.id AS a3_, a1_.length AS a4_ FROM org.intermine.model.bio.Gene AS a1_, org.intermine.model.bio.Organism AS a2_ WHERE a1_.organism CONTAINS a2_ ORDER BY a2_.name, a1_.id

# overlap widget
#precompute.query.11 = SELECT a2_.name AS a13_, a1_.id AS a12_, a1_.primaryIdentifier AS a7_, a6_.start AS a8_, a6_.end AS a9_, a5_.start AS a10_, a5_.end AS a11_ FROM org.intermine.model.bio.BindingSite AS a1_, org.intermine.model.bio.Organism AS a2_, org.intermine.model.bio.GeneFlankingRegion AS a3_, org.intermine.model.bio.Gene AS a4_, org.intermine.model.bio.Location AS a5_, org.intermine.model.bio.Location AS a6_ WHERE a1_.organism CONTAINS a2_ AND a1_.overlappingFeatures CONTAINS a3_ AND a1_.chromosomeLocation CONTAINS a6_ AND a3_.gene CONTAINS a4_ AND a4_.chromosomeLocation CONTAINS a5_ AND LOWER(a3_.distance) = '10.0kb' AND LOWER(a3_.direction) = 'upstream'
#precompute.query.12 = SELECT a2_.name AS a13_, a1_.id AS a12_, a1_.primaryIdentifier AS a7_, a6_.start AS a8_, a6_.end AS a9_, a5_.start AS a10_, a5_.end AS a11_ FROM org.intermine.model.bio.BindingSite AS a1_, org.intermine.model.bio.Organism AS a2_, org.intermine.model.bio.GeneFlankingRegion AS a3_, org.intermine.model.bio.Gene AS a4_, org.intermine.model.bio.Location AS a5_, org.intermine.model.bio.Location AS a6_ WHERE a1_.organism CONTAINS a2_ AND a1_.overlappingFeatures CONTAINS a3_ AND a1_.chromosomeLocation CONTAINS a6_ AND a3_.gene CONTAINS a4_ AND a4_.chromosomeLocation CONTAINS a5_ AND LOWER(a3_.distance) = '10.0kb' AND LOWER(a3_.direction) = 'downstream'

# protein domain widget
precompute.query.14 = SELECT a1_, a3_.name as a6_, a4_.primaryIdentifier AS a5_, a4_.name AS a7_ FROM org.intermine.model.bio.Gene AS a1_, org.intermine.model.bio.Protein AS a2_, org.intermine.model.bio.Organism AS a3_, org.intermine.model.bio.ProteinDomain AS a4_ WHERE (a1_.organism CONTAINS a3_ AND a1_.proteins CONTAINS a2_ AND a2_.proteinDomains CONTAINS a4_)

precompute.query.15 = SELECT a1_.id as a4_, a3_.primaryIdentifier AS a5_, a3_.name AS a6_, a2_.name as a7_ FROM org.intermine.model.bio.Protein AS a1_, org.intermine.model.bio.Organism AS a2_, org.intermine.model.bio.ProteinDomain AS a3_ WHERE (a1_.proteinDomains CONTAINS a3_ AND a1_.organism CONTAINS a2_)

precompute.query.16 = SELECT a2_.name AS a4_, COUNT(*) AS a5_ FROM org.intermine.model.bio.Protein AS a1_, org.intermine.model.bio.Organism AS a2_, org.intermine.model.bio.ProteinDomain AS a3_ WHERE a1_.proteinDomains CONTAINS a3_ AND LOWER(a3_.primaryIdentifier) LIKE 'ipr%' AND a1_.organism CONTAINS a2_ GROUP BY a2_.name

precompute.query.17 = SELECT a1_.id AS a4_, a2_.name AS a5_, a3_.id AS a6_, a3_.primaryIdentifier AS a7_, a3_.name AS a8_ FROM org.intermine.model.bio.Protein AS a1_, org.intermine.model.bio.Organism AS a2_, org.intermine.model.bio.ProteinDomain AS a3_ WHERE a1_.proteinDomains CONTAINS a3_ AND LOWER(a3_.primaryIdentifier) LIKE 'ipr%' AND a1_.organism CONTAINS a2_

# Publications widget
precompute.query.18 = SELECT a1_.id as a6_, a2_.pubMedId AS a4_, a2_.title AS a5_, a3_.name as a7_ FROM org.intermine.model.bio.Gene AS a1_, org.intermine.model.bio.Publication AS a2_, org.intermine.model.bio.Organism AS a3_ WHERE (a1_.organism CONTAINS a3_ AND a1_.publications CONTAINS a2_)

precompute.query.19 = SELECT a3_.name AS organismname, COUNT(*) AS a4_ FROM org.intermine.model.bio.Gene AS a1_, org.intermine.model.bio.Publication AS a2_, org.intermine.model.bio.Organism AS a3_ WHERE a1_.organism CONTAINS a3_ AND a1_.publications CONTAINS a2_ GROUP BY a3_.name

precompute.query.20 = SELECT a1_.id AS a4_, a3_.name AS a5_ FROM org.intermine.model.bio.Gene AS a1_, org.intermine.model.bio.Publication AS a2_, org.intermine.model.bio.Organism AS a3_ WHERE a1_.organism CONTAINS a3_ AND a1_.publications CONTAINS a2_

precompute.query.21 = SELECT a1_.id AS a4_, a3_.name AS a5_, a2_.pubMedId AS a6_, a2_.title AS a7_ FROM org.intermine.model.bio.Gene AS a1_, org.intermine.model.bio.Publication AS a2_, org.intermine.model.bio.Organism AS a3_ WHERE a1_.organism CONTAINS a3_ AND a1_.publications CONTAINS a2_

precompute.query.22 = SELECT a1_.id AS a4_, a3_.name AS a5_ FROM Gene AS a1_, Publication AS a2_, Organism AS a3_ WHERE a1_.organism CONTAINS a3_ AND a1_.publications CONTAINS a2_

# GO enrichment queries
precompute.query.23 = SELECT a1_.id AS a3_, a2_.id AS a4_ FROM org.intermine.model.bio.Gene AS a1_, org.intermine.model.bio.Organism AS a2_ WHERE (a1_.organism CONTAINS a2_)

# uniprot keyword widget
precompute.query.24 = SELECT a1_.id as a5_, a4_.name AS a6_, a2_.name as a7_ FROM org.intermine.model.bio.Protein AS a1_, org.intermine.model.bio.Organism AS a2_, org.intermine.model.bio.Ontology AS a3_, org.intermine.model.bio.OntologyTerm AS a4_ WHERE (a1_.organism CONTAINS a2_ AND a1_.keywords CONTAINS a4_ AND a4_.ontology CONTAINS a3_ AND a3_.name = 'UniProtKeyword')

# uniprot features widget
precompute.query.25 = SELECT a1_.id AS a4_, LOWER(a2_.name) AS a5_, a3_.type AS a6_ FROM org.intermine.model.bio.Protein AS a1_, org.intermine.model.bio.Organism AS a2_, org.intermine.model.bio.UniProtFeature AS a3_ WHERE a1_.organism CONTAINS a2_ AND a1_.features CONTAINS a3_

precompute.query.26 = SELECT a2_.name AS a4_, COUNT(*) AS a5_ FROM org.intermine.model.bio.Protein AS a1_, org.intermine.model.bio.Organism AS a2_, org.intermine.model.bio.UniProtFeature AS a3_ WHERE a1_.organism CONTAINS a2_ AND a1_.features CONTAINS a3_ GROUP BY a2_.name

# GO stats widget
precompute.query.28 = SELECT DISTINCT a4_.namespace AS a7_, a3_.taxonId AS a8_, a1_.id AS a9_, a4_.identifier AS a10_, a4_.name AS a11_ FROM org.intermine.model.bio.Gene AS a1_, org.intermine.model.bio.GOAnnotation AS a2_, org.intermine.model.bio.Organism AS a3_, org.intermine.model.bio.OntologyTerm AS a4_, org.intermine.model.bio.OntologyTerm AS a5_, org.intermine.model.bio.OntologyRelation AS a6_ WHERE a1_.goAnnotation CONTAINS a2_ AND LOWER(a4_.identifier) != 'go:0008150' AND LOWER(a4_.identifier) != 'go:0003674' AND LOWER(a4_.identifier) != 'go:0005575' AND a2_.ontologyTerm CONTAINS a5_ AND a5_.relations CONTAINS a6_ AND a6_.parentTerm CONTAINS a4_ AND a6_.childTerm CONTAINS a5_ AND a2_.qualifier IS NULL AND a1_.organism CONTAINS a3_

# mirna widget
# precompute.query.29 = SELECT a2_.id AS a5_, a3_.primaryIdentifier AS a6_ FROM org.intermine.model.bio.MiRNATarget AS a1_, org.intermine.model.bio.Gene AS a2_, org.intermine.model.bio.Gene AS a3_, org.intermine.model.bio.MRNA AS a4_ WHERE a3_.miRNAtargets CONTAINS a1_ AND a1_.target CONTAINS a4_ AND a4_.gene CONTAINS a2_

# genomic region search
precompute.query.30 = SELECT a3_.shortName AS a1_, a4_.class AS a2_ FROM org.intermine.model.bio.Organism AS a3_, org.intermine.model.bio.SequenceFeature AS a4_ WHERE a4_.organism CONTAINS a3_

precompute.query.31 = SELECT a4_.class AS a1_, a5_.name AS a2_, a5_.description AS a3_ FROM org.intermine.model.bio.SequenceFeature AS a4_, org.intermine.model.bio.SOTerm AS a5_ WHERE a4_.sequenceOntologyTerm CONTAINS a5_

precompute.constructquery.01 = Gene synonyms Synonym
precompute.constructquery.02 = Synonym subject Gene
precompute.constructquery.03 = BioEntity synonyms Synonym
precompute.constructquery.04 = Synonym subject BioEntity

precompute.constructquery.05 = Gene crossReferences CrossReference
precompute.constructquery.06 = CrossReference subject Gene
precompute.constructquery.07 = BioEntity crossReferences CrossReference
precompute.constructquery.08 = CrossReference subject BioEntity

precompute.constructquery.18 = BioEntity organism Organism
precompute.constructquery.19 = Gene organism Organism
precompute.constructquery.20 = Protein organism Organism
precompute.constructquery.21 = Exon organism Organism
precompute.constructquery.22 = Chromosome organism Organism
precompute.constructquery.23 = BioEntity ontologyAnnotations OntologyAnnotation
precompute.constructquery.24 = Gene ontologyAnnotations OntologyAnnotation

precompute.constructquery.28 = Gene goAnnotation GOAnnotation ontologyTerm OntologyTerm
precompute.constructquery.29 = Protein genes Gene goAnnotation GOAnnotation ontologyTerm OntologyTerm
precompute.constructquery.30 = Gene homologues Homologue homologue Gene
precompute.constructquery.31 = Gene homologues Homologue homologue Gene organism Organism
#precompute.constructquery.32 = Protein genes Gene homologues Homologue homologue Gene
#precompute.constructquery.33 = Gene homologues Homologue homologue Gene proteins Protein
#precompute.constructquery.34 = Protein genes Gene homologues Homologue homologue Gene proteins Protein

precompute.constructquery.35 = Gene proteins Protein
precompute.constructquery.36 = Protein genes Gene

precompute.constructquery.38 = Gene overlappingFeatures IntergenicRegion
precompute.constructquery.39 = IntergenicRegion overlappingFeatures Gene

#precompute.constructquery.40 = Gene interactions Interaction interactingGenes Gene
#precompute.constructquery.41 = Interaction interactingGenes Gene
#precompute.constructquery.42 = Gene interactions Interaction
#precompute.constructquery.43 = Interaction experiment InteractionExperiment

precompute.constructquery.40 = Gene interactions Interaction gene2 Gene
precompute.constructquery.41 = Interaction gene2 Gene
precompute.constructquery.42 = Gene interactions Interaction
precompute.constructquery.43 = Interaction details InteractionDetail experiment InteractionExperiment

precompute.constructquery.400 = Location reverse.chromosomeLocation Gene overlappingFeatures Submission.features.class submissions Submission ORDER BY 4.title 2.primaryIdentifier 3.secondaryIdentifier 1.start 1.end 1.strand
#precompute.constructquery.401 = Location reverse.chromosomeLocation Intron,IntergenicRegion overlappingFeatures Submission.features.class submissions Submission ORDER BY 4.title 2.primaryIdentifier 3.secondaryIdentifier 1.start 1.end 1.strand
#precompute.constructquery.402 = Gene flankingRegions GeneFlankingRegion overlappingFeatures Submission.features.class submissions Submission ORDER BY 4.title 2.distance 2.direction 1.primaryIdentifier 3.secondaryIdentifier
#precompute.constructquery.403 = Location reverse.chromosomeLocation Exon overlappingFeatures Submission.features.class submissions Submission 2.gene Gene ORDER BY 4.title 2.primaryIdentifier 3.secondaryIdentifier 1.start 1.end 1.strand 5.primaryIdentifier
