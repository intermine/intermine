## refer to https://github.com/radekstepan/AccorDB/blob/master/server/queries.json
## IQLs are abtained from /webapp/query.log *DARK ARTS*

## Gene -> Homologue -> datasets
# <query name="" model="genomic" view="Gene.homologues.dataSets.name" longDescription="" sortOrder="Gene.homologues.dataSets.name asc"></query>
precompute.query.1 = SELECT DISTINCT a3_.id AS a3_id, a3_.name AS orderbyfield1 FROM org.intermine.model.bio.Gene AS a1_, org.intermine.model.bio.Homologue AS a2_, org.intermine.model.bio.DataSet AS a3_ WHERE (a1_.homologues CONTAINS a2_ AND a2_.dataSets CONTAINS a3_) ORDER BY a3_.name
# generated sql: SELECT DISTINCT a3_.id AS a3_id, a3_.name AS orderbyfield1 FROM Gene AS a1_, Homologue AS a2_, DataSet AS a3_, DataSetsHomologue AS indirect0 WHERE a1_.id = a2_.geneId AND a2_.id = indirect0.Homologue AND indirect0.DataSets = a3_.id ORDER BY a3_.name, a3_.id LIMIT 5000
# optimised sql: SELECT DISTINCT a3_.id AS a3_id, a3_.name AS orderbyfield1 FROM Gene AS a1_, Homologue AS a2_, DataSet AS a3_, DataSetsHomologue AS indirect0 WHERE a1_.id = a2_.geneId AND a2_.id = indirect0.Homologue AND indirect0.DataSets = a3_.id ORDER BY a3_.name, a3_.id LIMIT 5000

## homologuesForGenes
# <query name="" model="genomic" view="Gene.primaryIdentifier Gene.symbol Gene.homologues.homologue.primaryIdentifier Gene.homologues.homologue.symbol Gene.homologues.homologue.organism.name Gene.homologues.homologue.dataSets.name" longDescription="" sortOrder="Gene.primaryIdentifier asc"></query>
precompute.query.2 = SELECT DISTINCT a1_.id AS a1_id, a3_.id AS a3_id, a4_.id AS a4_id, a5_.id AS a5_id, a1_.primaryIdentifier AS orderbyfield1, a1_.symbol AS orderbyfield2, a3_.primaryIdentifier AS orderbyfield3, a3_.symbol AS orderbyfield4, a4_.name AS orderbyfield5, a5_.name AS orderbyfield6 FROM org.intermine.model.bio.Gene AS a1_, org.intermine.model.bio.Homologue AS a2_, org.intermine.model.bio.Gene AS a3_, org.intermine.model.bio.Organism AS a4_, org.intermine.model.bio.DataSet AS a5_ WHERE (a1_.homologues CONTAINS a2_ AND a2_.homologue CONTAINS a3_ AND a3_.organism CONTAINS a4_ AND a3_.dataSets CONTAINS a5_) ORDER BY a1_.primaryIdentifier, a1_.symbol, a3_.primaryIdentifier, a3_.symbol, a4_.name, a5_.name
# generated sql: SELECT DISTINCT a1_.id AS a1_id, a3_.id AS a3_id, a4_.id AS a4_id, a5_.id AS a5_id, a1_.primaryIdentifier AS orderbyfield1, a1_.symbol AS orderbyfield2, a3_.primaryIdentifier AS orderbyfield3, a3_.symbol AS orderbyfield4, a4_.name AS orderbyfield5, a5_.name AS orderbyfield6 FROM Gene AS a1_, Homologue AS a2_, Gene AS a3_, Organism AS a4_, DataSet AS a5_, BioEntitiesDataSets AS indirect0 WHERE a1_.id = a2_.geneId AND a2_.homologueId = a3_.id AND a3_.organismId = a4_.id AND a3_.id = indirect0.BioEntities AND indirect0.DataSets = a5_.id ORDER BY a1_.primaryIdentifier, a1_.symbol, a3_.primaryIdentifier, a3_.symbol, a4_.name, a5_.name, a1_.id, a3_.id, a4_.id, a5_.id LIMIT 5000
# optimised sql: SELECT DISTINCT a1_.id AS a1_id, a3_.id AS a3_id, a4_.id AS a4_id, a5_.id AS a5_id, a1_.primaryIdentifier AS orderbyfield1, a1_.symbol AS orderbyfield2, a3_.primaryIdentifier AS orderbyfield3, a3_.symbol AS orderbyfield4, a4_.name AS orderbyfield5, a5_.name AS orderbyfield6 FROM Gene AS a1_, Homologue AS a2_, Gene AS a3_, Organism AS a4_, DataSet AS a5_, BioEntitiesDataSets AS indirect0 WHERE a1_.id = a2_.geneId AND a2_.homologueId = a3_.id AND a3_.organismId = a4_.id AND a3_.id = indirect0.BioEntities AND indirect0.DataSets = a5_.id ORDER BY a1_.primaryIdentifier, a1_.symbol, a3_.primaryIdentifier, a3_.symbol, a4_.name, a5_.name, a1_.id, a3_.id, a4_.id, a5_.id LIMIT 5000

## homologues + genes + datasets
# <query name="" model="genomic" view="Homologue.type Homologue.dataSets.name Homologue.gene.primaryIdentifier Homologue.gene.secondaryIdentifier Homologue.gene.symbol Homologue.gene.organism.name Homologue.homologue.secondaryIdentifier Homologue.homologue.symbol Homologue.homologue.primaryIdentifier Homologue.homologue.organism.name" longDescription="" sortOrder="Homologue.type asc"></query>
precompute.query.3 = SELECT DISTINCT a1_.id AS a1_id, a2_.id AS a2_id, a3_.id AS a3_id, a4_.id AS a4_id, a5_.id AS a5_id, a6_.id AS a6_id, a1_.type AS orderbyfield1, a2_.name AS orderbyfield2, a3_.primaryIdentifier AS orderbyfield3, a3_.secondaryIdentifier AS orderbyfield4, a3_.symbol AS orderbyfield5, a4_.name AS orderbyfield6, a5_.secondaryIdentifier AS orderbyfield7, a5_.symbol AS orderbyfield8, a5_.primaryIdentifier AS orderbyfield9, a6_.name AS orderbyfield10 FROM org.intermine.model.bio.Homologue AS a1_, org.intermine.model.bio.DataSet AS a2_, org.intermine.model.bio.Gene AS a3_, org.intermine.model.bio.Organism AS a4_, org.intermine.model.bio.Gene AS a5_, org.intermine.model.bio.Organism AS a6_ WHERE (a1_.dataSets CONTAINS a2_ AND a1_.gene CONTAINS a3_ AND a3_.organism CONTAINS a4_ AND a1_.homologue CONTAINS a5_ AND a5_.organism CONTAINS a6_) ORDER BY a1_.type, a2_.name, a3_.primaryIdentifier, a3_.secondaryIdentifier, a3_.symbol, a4_.name, a5_.secondaryIdentifier, a5_.symbol, a5_.primaryIdentifier, a6_.name
# generated sql: SELECT a1_.id AS a1_id, a2_.id AS a2_id, a3_.id AS a3_id, a4_.id AS a4_id, a5_.id AS a5_id, a6_.id AS a6_id, a1_.type AS orderbyfield1, a2_.name AS orderbyfield2, a3_.primaryIdentifier AS orderbyfield3, a3_.secondaryIdentifier AS orderbyfield4, a3_.symbol AS orderbyfield5, a4_.name AS orderbyfield6, a5_.secondaryIdentifier AS orderbyfield7, a5_.symbol AS orderbyfield8, a5_.primaryIdentifier AS orderbyfield9, a6_.name AS orderbyfield10 FROM Homologue AS a1_, DataSet AS a2_, Gene AS a3_, Organism AS a4_, Gene AS a5_, Organism AS a6_, DataSetsHomologue AS indirect0 WHERE a1_.id = indirect0.Homologue AND indirect0.DataSets = a2_.id AND a1_.geneId = a3_.id AND a3_.organismId = a4_.id AND a1_.homologueId = a5_.id AND a5_.organismId = a6_.id ORDER BY a1_.type, a2_.name, a3_.primaryIdentifier, a3_.secondaryIdentifier, a3_.symbol, a4_.name, a5_.secondaryIdentifier, a5_.symbol, a5_.primaryIdentifier, a6_.name, a1_.id, a2_.id, a3_.id, a4_.id, a5_.id, a6_.id LIMIT 5000
# optimised sql: SELECT a1_.id AS a1_id, a2_.id AS a2_id, a3_.id AS a3_id, a4_.id AS a4_id, a5_.id AS a5_id, a6_.id AS a6_id, a1_.type AS orderbyfield1, a2_.name AS orderbyfield2, a3_.primaryIdentifier AS orderbyfield3, a3_.secondaryIdentifier AS orderbyfield4, a3_.symbol AS orderbyfield5, a4_.name AS orderbyfield6, a5_.secondaryIdentifier AS orderbyfield7, a5_.symbol AS orderbyfield8, a5_.primaryIdentifier AS orderbyfield9, a6_.name AS orderbyfield10 FROM Homologue AS a1_, DataSet AS a2_, Gene AS a3_, Organism AS a4_, Gene AS a5_, Organism AS a6_, DataSetsHomologue AS indirect0 WHERE a1_.id = indirect0.Homologue AND indirect0.DataSets = a2_.id AND a1_.geneId = a3_.id AND a3_.organismId = a4_.id AND a1_.homologueId = a5_.id AND a5_.organismId = a6_.id ORDER BY a1_.type, a2_.name, a3_.primaryIdentifier, a3_.secondaryIdentifier, a3_.symbol, a4_.name, a5_.secondaryIdentifier, a5_.symbol, a5_.primaryIdentifier, a6_.name, a1_.id, a2_.id, a3_.id, a4_.id, a5_.id, a6_.id LIMIT 5000